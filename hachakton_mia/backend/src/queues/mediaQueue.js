/**
 * Configuration de la file d'attente pour le traitement des mÃ©dias
 * Utilise Bull pour gÃ©rer le traitement asynchrone des fichiers mÃ©dias
 */
const Queue = require('bull')  // BibliothÃ¨que de gestion de files d'attente

/**
 * CrÃ©ation d'une file d'attente nommÃ©e "media-processing"
 * Configuration pour se connecter Ã  Redis (backend de stockage de Bull)
 */
const mediaQueue = new Queue("media-processing", {
  redis: { host: "127.0.0.1", port: 6379 },  // Connexion Ã  Redis local
});

/**
 * DÃ©finition du processus de traitement des mÃ©dias
 * @async
 * @param {Object} job - TÃ¢che Bull contenant les donnÃ©es du mÃ©dia Ã  traiter
 */
mediaQueue.process(async (job) => {
  console.log(`ðŸ“¸ Traitement du mÃ©dia : ${job.data.filePath}`);

  // Simulation d'un traitement de mÃ©dia qui prend du temps
  // Dans un cas rÃ©el, cela pourrait Ãªtre de la compression, du redimensionnement, etc.
  await new Promise((resolve) => setTimeout(resolve, 3000));

  console.log(`âœ… MÃ©dia traitÃ© : ${job.data.filePath}`);
});

// Export de la file d'attente pour utilisation dans d'autres modules
module.exports = mediaQueue